name: CI/CD Pipeline for Docker Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the GitHub repository
    - name: Checkout Code
      uses: actions/checkout@v2

    # Step 2: Clear local Docker images related to 'twjapp' (optional, for clean builds)
    - name: Clear local Docker images related to twjapp
      run: |
        docker image prune -af --filter="label=name=twjapp"

    # Step 3: Build Docker image (using Docker Hub username from GitHub Secrets)
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/twjapp:latest .

    # Step 4: Login to Docker Hub
    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Step 5: Push Docker image to Docker Hub
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/twjapp:latest

    # Step 6: Print Environment Variables (for debugging purposes)
    - name: Print Environment Variables
      run: env

    # Step 7: Debugging and Deploy to EC2 using SSH
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}  # The EC2 instance IP address
        username: ${{ secrets.EC2_USER }}  # EC2 username (e.g., ec2-user)
        key: ${{ secrets.SSH_PRIVATE_KEY }}  # The private SSH key (added to GitHub secrets)
        port: 22
        debug: true  # Enable debug mode to output more information
        script: |
          # Debugging: Check if the SSH connection is successful
          echo "Attempting to connect to EC2"
          echo "Checking for existing Docker containers"
          docker ps -a

          # Stop and remove only the 'twjapp-container'
          echo "Stopping and removing twjapp-container"
          docker stop twjapp-container || true
          docker rm twjapp-container || true

          # Remove only the 'twjapp' Docker image
          echo "Removing old twjapp image"
          docker rmi -f ${{ secrets.DOCKER_USERNAME }}/twjapp:latest || true

          # Pull the new 'twjapp' Docker image from Docker Hub
          echo "Pulling new twjapp Docker image"
          docker pull ${{ secrets.DOCKER_USERNAME }}/twjapp:latest

          # Start the new 'twjapp-container'
          echo "Starting the new twjapp container"
          docker run -d -p 5000:5000 --name twjapp-container ${{ secrets.DOCKER_USERNAME }}/twjapp:latest
