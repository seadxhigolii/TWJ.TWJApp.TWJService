name: CI/CD Pipeline for Docker Deployment

on:
  push:
    branches:
      - master 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the GitHub repository
    - name: Checkout Code
      uses: actions/checkout@v2

    # Step 2: Clear all local Docker images (optional, for clean builds)
    - name: Clear all local Docker images
      run: |
        docker image prune -af

    # Step 3: Build Docker image (using Docker Hub username from GitHub Secrets)
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/twjapp:latest .

    # Step 4: Login to Docker Hub
    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Step 5: Push Docker image to Docker Hub
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/twjapp:latest

    # Step 6: Connect to EC2 and deploy Docker image
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Stop and remove all running Docker containers
          docker stop $(docker ps -a -q) || true
          docker rm $(docker ps -a -q) || true
    
          # Remove old Docker images
          docker rmi -f $(docker images -q) || true
    
          # Pull the new Docker image from Docker Hub
          docker pull ${{ secrets.DOCKER_USERNAME }}/twjapp:latest
    
          # Start the new Docker container
          docker run -d -p 5000:5000 --name twjapp-container ${{ secrets.DOCKER_USERNAME }}/twjapp:latest


